name: Workflow router
on:
  repository_dispatch: {}
jobs:
  create-status:
    name: Create commit status
    runs-on: ubuntu-latest
    steps:
      - name: Create commit status
        uses: actions/github-script@v6
        id: create-check-run
        with:
          github-token: ${{ secrets.PAT }}
          script: |
            const event = context.payload.client_payload.event;
            const result = await github.rest.repos.createCommitStatus({
              owner: event.repository.owner.name,
              repo: event.repository.name,
              sha: event.after,
              state: 'pending',
              target_url: `${context.serverUrl}/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`,
              description: 'In progress',
              context: 'CI',
            });
    outputs:
      id: ${{ steps.create-check-run.outputs.result.id }}
  accounts-ci:
    name: Accounts - CI
    uses: ./.github/workflows/accounts-ci.yaml
    if: ${{ github.event.client_payload.event.repository.full_name == 'webzyno/accounts' }}
    needs: create-status
    with:
      event: ${{ toJSON(github.event.client_payload.event) }}
    secrets:
      PAT: ${{ secrets.PAT }}
  update-status:
    name: Update commit status
    runs-on: ubuntu-latest
    if: ${{ always() }}
    needs: accounts-ci
    steps:
      - name: Update commit status
        uses: actions/github-script@v6
        id: upadte-commit-status
        env:
          RESULT: ${{ needs.accounts-ci.result }}
        with:
          github-token: ${{ secrets.PAT }}
          script: |
            // parse result
            const { RESULT } = process.env;
            const state = (RESULT === 'cancelled' || RESULT === 'skipped') ? 'success' : RESULT;

            const event = context.payload.client_payload.event;
            const result = await github.rest.repos.createCommitStatus({
              owner: event.repository.owner.name,
              repo: event.repository.name,
              sha: event.after,
              state,
              target_url: `${context.serverUrl}/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`,
              description: `Successful`,
              context: 'CI',
            });